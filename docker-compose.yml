---
version: '3.7'

networks:
  kafka-lan:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-lan

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-lan

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    networks:
      - kafka-lan

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "9002:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-dev-environment
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: https://my-schema-reg.com
      JAVA_OPTS: >-
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Djavax.net.ssl.trustStore=/home/kafkaui/cacerts
        -Djavax.net.ssl.trustStorePassword=changeit
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka-lan
    volumes:
      - ${JAVA_HOME}/lib/security/cacerts:/home/kafkaui/cacerts

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                   cub kafka-ready -b kafka0:29092 1 30 && \
                   kafka-topics --create --topic second.users --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092 && \
                   kafka-topics --create --topic first.messages --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092 && \
                   kafka-console-producer --bootstrap-server kafka0:29092 --topic second.users < /data/message.json'"
    depends_on:
      - kafka
    networks:
      - kafka-lan
    volumes:
      - ./message.json:/data/message.json